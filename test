

    def open_file(self):
        # открытие файла с текстом
        fname = QFileDialog.getOpenFileName(self, 'Выбрать файл с текстом', '')[0]
        text_file = open(fname, mode="r")
        self.text = text_file.read()
        self.textEdit_MainText.setText(self.text)
        text_file.close()

    def copy_clipboard(self):
        # копирование текста из буфера обмена
        clip = clipboard.paste()
        self.textEdit_MainText.setText(clip)

    def show_time(self):
        if not self.stop_reading:
            self.seconds += 1
            self.lcdTime.display(int(self.seconds / 10))

    def (self):
        self.stop_reading = False
        self.seconds = 0

    def stop(self):
        self.stop_reading = True
       

        self.wmRating = (len(WordArr) / (self.seconds / 10)) * 60

        # запись 
        con = sqlite3.connect('')
        cur = con.cursor()
      
     
        # выводим результат пользователю

        buttonReply = QMessageBox.question(self, 'Результат',
                                           "Ваш результат составил {} слов/мин".format(self.wmRating),
                                           QMessageBox.Yes)
        self.Menu = MenuWindow()
        if buttonReply == QMessageBox.Yes:
            self.close()
            self.Menu.show()
        self.close()
        self.Menu.show()


class SpeedLineWindow(QDialog):
    def __init__(self):
        super().__init__()
        uic.loadUi('Speed_Line.ui', self)  
        # Загружаем дизайн
       
       
       
       
       
    def open_file(self):
        # открытие файла с текстом
        fname = QFileDialog.getOpenFileName(self, 'Выбрать файл с текстом', '')[0]
        text_file = open(fname, mode="r")
        self.text = text_file.read()
        self.text_arr = self.text.split()
        text_file.close()

   
            # записываем новый результат
            if self.points != rating[0]:
                cur.execute("""INSERT INTO Stats (score) VALUES (?)
                WHERE id=(
                    SELECT id FROM User
                        WHERE login = ?)""", (self.points, username))
            con.commit()
            con.close()
            self.close()
            self.Menu.show()


